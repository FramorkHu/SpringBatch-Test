<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">

    <bean id="dataSource"
                class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/springbatch" />
        <property name="username" value="root" />
        <property name="password" value="123456" />
    </bean>


    <bean id="transactionManager"
          class="org.springframework.batch.support.transaction.ResourcelessTransactionManager"/>

    <bean id="jobRepository"
                class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="transactionManager" ref="transactionManager" />
    </bean>

    <bean id="userDbReader"
                class="org.springframework.batch.item.database.JdbcPagingItemReader">
        <property name="dataSource" ref="dataSource" />
        <property name="rowMapper" ref="userDbMapper" />
        <property name="queryProvider" ref="userQueryProvider" />
    </bean>

    <bean id="userDbMapper"
                class="com.springbatch.demo.operate.UserDbMapper" />

    <bean id="userQueryProvider"
                class="org.springframework.batch.item.database.support.MySqlPagingQueryProvider">
        <property name="selectClause" value="u.id,u.name,u.age,u.balance" />
        <property name="fromClause" value="users u" />
        <property name="sortKeys">
            <map>
                <entry key="u.id" value="ASCENDING"/>
            </map>
        </property>
    </bean>

    <bean id="billDbReader"
                class="org.springframework.batch.item.database.JdbcPagingItemReader">
        <property name="dataSource" ref="dataSource" />
        <property name="rowMapper" ref="billDbMapper" />
        <property name="queryProvider" ref="billQueryProvider" />
    </bean>

    <bean id="billDbMapper"
                class="com.springbatch.demo.operate.BillDbMapper" />

    <bean id="billQueryProvider"
                class="org.springframework.batch.item.database.support.MySqlPagingQueryProvider">
        <property name="selectClause"
                        value="b.id,b.user_id,b.fees,b.paid_fees,b.unpaid_fees,b.pay_status,u.name,u.age,u.balance" />
        <property name="fromClause" value="users u,bills b" />
        <property name="whereClause" value="b.user_id=u.id" />
        <property name="sortKeys">
            <map>
                <entry key="b.id" value="ASCENDING"/>
            </map>
        </property>
    </bean>

    <bean id="billArrearsDbReader"
                class="org.springframework.batch.item.database.JdbcPagingItemReader">
        <property name="dataSource" ref="dataSource" />
        <property name="rowMapper" ref="billDbMapper" />
        <property name="queryProvider" ref="billArrearsQueryProvider" />
    </bean>

    <bean id="billArrearsQueryProvider"
                class="org.springframework.batch.item.database.support.MySqlPagingQueryProvider">
        <property name="selectClause"
                        value="b.id,b.user_id,b.fees,b.paid_fees,b.unpaid_fees,b.pay_status,u.name,u.age,u.balance" />
        <property name="fromClause" value="users u,bills b" />
        <property name="whereClause"
                        value="b.user_id=u.id and b.pay_status=0" />
        <property name="sortKeys">
            <map>
                <entry key="b.id" value="ASCENDING"/>
            </map>
        </property>
    </bean>



    <bean id="messageDbWriter"
                class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource" />
        <property name="sql"
                        value="insert into messages(id,user_id,content) values(:id,:user.id,:content)" />
        <property name="itemSqlParameterSourceProvider"
                        ref="itemSqlParameterSourceProvider" />
    </bean>

    <bean id="billDbWriter"
                class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource" />
        <property name="sql"
                        value="insert into bills(id,user_id,fees,paid_fees,unpaid_fees,pay_status) values(:id,:user.id,:fees,:paidFees,:unpaidFees,:payStatus)" />
        <property name="itemSqlParameterSourceProvider"
                        ref="itemSqlParameterSourceProvider" />
    </bean>

    <bean id="payDbWriter"
                class="org.springframework.batch.item.support.CompositeItemWriter">
        <property name="delegates">
            <list>
                <ref bean="payRecordDbWriter" />
                <ref bean="payBillsDbUpdateWriter" />
                <ref bean="payUsersDbUpdateWriter" />
            </list>
        </property>
    </bean>

    <bean id="payBillsDbUpdateWriter"
                class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource" />
        <property name="sql"
                        value="update bills b set b.paid_fees=:bill.paidFees,b.unpaid_fees=:bill.unpaidFees,b.pay_status=:bill.payStatus where b.id=:bill.id" />
        <property name="itemSqlParameterSourceProvider"
                        ref="itemSqlParameterSourceProvider" />
    </bean>

    <bean id="payUsersDbUpdateWriter"
                class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource" />
        <property name="sql"
                        value="update users u set u.balance=:bill.user.balance where u.id=:bill.user.id" />
        <property name="itemSqlParameterSourceProvider"
                        ref="itemSqlParameterSourceProvider" />
    </bean>

    <bean id="payRecordDbWriter"
                class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource" />
        <property name="sql"
                        value="insert into payrecords(id,bill_id,paid_fees) values(:id,:bill.id,:paidFees)" />
        <property name="itemSqlParameterSourceProvider"
                        ref="itemSqlParameterSourceProvider" />
    </bean>

    <bean id="itemSqlParameterSourceProvider"
                class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>


    <bean id="billingProcessor" class="com.springbatch.demo.payOperate.BillingItemProcessor"/>
    <bean id="payProcessor" class="com.springbatch.demo.payOperate.PaymentItemProcessor"/>
    <bean id="messageProcessor" class="com.springbatch.demo.payOperate.ArrearsMessagesItemProcessor"/>

    <bean id="taskExecutor" class="org.springframework.core.task.SimpleAsyncTaskExecutor"/>

    <batch:job id="billingJob" restartable="true">
        <batch:step id="billingStep" next="payStep">
            <batch:tasklet throttle-limit="5" task-executor="taskExecutor">
                <batch:chunk reader="userDbReader" processor="billingProcessor"
                       writer="billDbWriter" commit-interval="5">
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
        <batch:step id="payStep" next="messageStep">
            <batch:tasklet>
                <batch:chunk reader="billDbReader" processor="payProcessor" writer="payDbWriter"
                       commit-interval="5"  skip-limit="100" >
                    <batch:skippable-exception-classes>
                        <batch:include class="com.springbatch.demo.exception.MoneyNotEnoughException" />
                    </batch:skippable-exception-classes>
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
        <batch:step id="messageStep">
            <batch:tasklet>
                <batch:chunk reader="billArrearsDbReader" processor="messageProcessor"
                       writer="messageDbWriter" commit-interval="5">
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
    </batch:job>

</beans>